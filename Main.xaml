<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="586,1467" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p5="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p7="http://schemas.uipath.com/workflow/activities/intelligentocr/training" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture.Enums</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture.ValidationStationAdapters</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>TelemetryClient.Attributes</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="56">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Abbyy.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Abbyy.Core</AssemblyReference>
      <AssemblyReference>TelemetryClient</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="349,1302" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="p8:DocumentTaxonomy" Name="taxonomy" />
      <Variable x:TypeArguments="x:String" Name="currentFolder" />
      <Variable x:TypeArguments="s:String[]" Name="documentToProces" />
      <Variable x:TypeArguments="p5:ClassificationResult[]" Name="classificationsResults" />
      <Variable x:TypeArguments="p3:Document" Name="DOM" />
      <Variable x:TypeArguments="x:String" Name="DocText" />
      <Variable x:TypeArguments="p5:ExtractionResult" Name="ExtractionResult" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="307,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[currentFolder]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="307,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[documentToProces]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(currentFolder+ "\docs")]</InArgument>
      </Assign.Value>
    </Assign>
    <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="307,67" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[taxonomy]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p:LoadTaxonomy>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="307,903" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[documentToProces]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,769" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="p5:ExtractionResult" Name="validatedResults" />
              <Variable x:TypeArguments="sd1:DataSet" Name="tableExtracted" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <p:DigitizeDocument DegreeOfParallelism="1" DisplayName="Digitize Document" DocumentObjectModel="[DOM]" DocumentPath="[item]" DocumentText="[DocText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="200,67" sap2010:WorkflowViewState.IdRef="DigitizeDocument_2">
              <p:DigitizeDocument.OCREngine>
                <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                  <ActivityFunc.Argument>
                    <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                  </ActivityFunc.Argument>
                  <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,22" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_2" Image="[Image]" />
                </ActivityFunc>
              </p:DigitizeDocument.OCREngine>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:DigitizeDocument>
            <p1:ClassifyDocumentScope ClassificationResults="[classificationsResults]" DisplayName="Classify Document Scope" DocumentObjectModel="[DOM]" DocumentPath="[item]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="200,67" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIdb2adc8ad3d54f03a47deb382956ce7a&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Invoices.Invoices.InvoiceName&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Invoices.Invoices.InvoiceName&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Letter.Letter.Name&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Letter.Letter.Name&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UIdb2adc8ad3d54f03a47deb382956ce7a&quot;:&quot;0&quot;}}">
              <p1:ClassifyDocumentScope.Classifiers>
                <p1:KeywordBasedClassifier HumanValidatedData="{x:Null}" LearningData="{x:Null}" DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="234,113" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_1" LearningFilePath="DocumentProcessing\learning.json.txt" PersistenceId="UIdb2adc8ad3d54f03a47deb382956ce7a">
                  <p1:KeywordBasedClassifier.ClassifierResult>
                    <OutArgument x:TypeArguments="p2:ClassifierResult">
                      <DelegateArgumentReference x:TypeArguments="p2:ClassifierResult">
                        <DelegateOutArgument x:TypeArguments="p2:ClassifierResult" Name="ClassificationResult" />
                      </DelegateArgumentReference>
                    </OutArgument>
                  </p1:KeywordBasedClassifier.ClassifierResult>
                  <p1:KeywordBasedClassifier.DocumentObjectModel>
                    <InArgument x:TypeArguments="p3:Document">
                      <DelegateArgumentValue x:TypeArguments="p3:Document">
                        <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p1:KeywordBasedClassifier.DocumentObjectModel>
                  <p1:KeywordBasedClassifier.DocumentPath>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p1:KeywordBasedClassifier.DocumentPath>
                  <p1:KeywordBasedClassifier.DocumentText>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p1:KeywordBasedClassifier.DocumentText>
                  <p1:KeywordBasedClassifier.DocumentTypes>
                    <InArgument x:TypeArguments="p2:ClassifierDocumentType[]">
                      <DelegateArgumentValue x:TypeArguments="p2:ClassifierDocumentType[]">
                        <DelegateInArgument x:TypeArguments="p2:ClassifierDocumentType[]" Name="DocumentTypes" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p1:KeywordBasedClassifier.DocumentTypes>
                </p1:KeywordBasedClassifier>
              </p1:ClassifyDocumentScope.Classifiers>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p1:ClassifyDocumentScope>
            <If Condition="[classificationsResults.Any]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="520,453" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <p4:DataExtractionScope DocumentTypeId="{x:Null}" ClassificationResult="[classificationsResults.First]" DisplayName="Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="[item]" DocumentText="[DocText]" ExtractionResult="[ExtractionResult]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="478,361" sap2010:WorkflowViewState.IdRef="DataExtractionScope_7" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIc606a8a72c924811a3844ce0b9166f11&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Invoices.Invoices.InvoiceName&quot;:{&quot;FieldMappings&quot;:{&quot;Invoices.Invoices.InvoiceName.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Invoices.Invoices.InvoiceName.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;Number\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Invoices.Invoices.InvoiceName.InvoiceDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Invoices.Invoices.InvoiceName.InvoiceDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;Date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Invoices.Invoices.InvoiceName.Amount&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Invoices.Invoices.InvoiceName.Amount&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;Amount\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;Invoices\&quot;&quot;},&quot;Letter.Letter.Name&quot;:{&quot;FieldMappings&quot;:{&quot;Letter.Letter.Name.LetterDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Letter.Letter.Name.LetterDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;Date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Letter.Letter.Name.sender&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Letter.Letter.Name.sender&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;sender\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Letter.Letter.Name.receiver&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Letter.Letter.Name.receiver&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;receiver\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;Letter\&quot;&quot;}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UIc606a8a72c924811a3844ce0b9166f11&quot;:&quot;0&quot;},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UIc606a8a72c924811a3844ce0b9166f11&quot;:[]}}">
                    <p4:DataExtractionScope.Extractors>
                      <p4:FlexiCaptureExtractor DefinitionFiles="[{&quot;Invoices.fcdot&quot;,&quot;Letter.fcdot&quot;}]" DisplayName="FlexiCapture Extractor" sap:VirtualizedContainerService.HintSize="200,40" sap2010:WorkflowViewState.IdRef="FlexiCaptureExtractor_8" PersistenceId="UIc606a8a72c924811a3844ce0b9166f11" UsePdfTextLayerOnly="False">
                        <p4:FlexiCaptureExtractor.DocumentBounds>
                          <InArgument x:TypeArguments="p5:ResultsDocumentBounds">
                            <DelegateArgumentValue x:TypeArguments="p5:ResultsDocumentBounds">
                              <DelegateInArgument x:TypeArguments="p5:ResultsDocumentBounds" Name="DocumentBounds" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:FlexiCaptureExtractor.DocumentBounds>
                        <p4:FlexiCaptureExtractor.DocumentObjectModel>
                          <InArgument x:TypeArguments="p3:Document">
                            <DelegateArgumentValue x:TypeArguments="p3:Document">
                              <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:FlexiCaptureExtractor.DocumentObjectModel>
                        <p4:FlexiCaptureExtractor.DocumentPath>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:FlexiCaptureExtractor.DocumentPath>
                        <p4:FlexiCaptureExtractor.DocumentText>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:FlexiCaptureExtractor.DocumentText>
                        <p4:FlexiCaptureExtractor.ExtractorDocumentType>
                          <InArgument x:TypeArguments="p6:ExtractorDocumentType">
                            <DelegateArgumentValue x:TypeArguments="p6:ExtractorDocumentType">
                              <DelegateInArgument x:TypeArguments="p6:ExtractorDocumentType" Name="ExtractorDocumentType" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:FlexiCaptureExtractor.ExtractorDocumentType>
                        <p4:FlexiCaptureExtractor.ExtractorResult>
                          <OutArgument x:TypeArguments="p6:ExtractorResult">
                            <DelegateArgumentReference x:TypeArguments="p6:ExtractorResult">
                              <DelegateOutArgument x:TypeArguments="p6:ExtractorResult" Name="ExtractorResult" />
                            </DelegateArgumentReference>
                          </OutArgument>
                        </p4:FlexiCaptureExtractor.ExtractorResult>
                      </p4:FlexiCaptureExtractor>
                    </p4:DataExtractionScope.Extractors>
                  </p4:DataExtractionScope>
                </Sequence>
              </If.Then>
              <If.Else>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="p5:ExtractionResult">[ExtractionResult]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="p5:ExtractionResult">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <p:PresentValidationStation AutomaticExtractionResults="[ExtractionResult]" DisplayName="Present Validation Station" DocumentObjectModel="[DOM]" DocumentPath="[item]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="200,67" sap2010:WorkflowViewState.IdRef="PresentValidationStation_1" Taxonomy="[taxonomy]" ValidatedExtractionResults="[validatedResults]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:PresentValidationStation>
            <p7:TrainClassifiersScope DisplayName="Train Classifiers Scope" DocumentObjectModel="[DOM]" DocumentPath="[item]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="200,67" HumanValidatedData="[validatedResults]" sap2010:WorkflowViewState.IdRef="TrainClassifiersScope_1" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI1f0c462fdb1945648441022971d974e4&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Invoices.Invoices.InvoiceName&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Invoices.Invoices.InvoiceName&quot;,&quot;ClassifierDocumentTypeId&quot;:&quot;&quot;,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Letter.Letter.Name&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Letter.Letter.Name&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI1f0c462fdb1945648441022971d974e4&quot;:&quot;0&quot;}}">
              <p7:TrainClassifiersScope.Trainables>
                <p7:KeywordBasedClassifierTrainer LearningData="{x:Null}" DisplayName="Keyword Based Classifier Trainer" sap:VirtualizedContainerService.HintSize="234,113" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifierTrainer_1" LearningFilePath="DocumentProcessing\learning.json.txt" PersistenceId="UI1f0c462fdb1945648441022971d974e4">
                  <p7:KeywordBasedClassifierTrainer.DocumentObjectModel>
                    <InArgument x:TypeArguments="p3:Document">
                      <DelegateArgumentValue x:TypeArguments="p3:Document">
                        <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p7:KeywordBasedClassifierTrainer.DocumentObjectModel>
                  <p7:KeywordBasedClassifierTrainer.DocumentPath>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p7:KeywordBasedClassifierTrainer.DocumentPath>
                  <p7:KeywordBasedClassifierTrainer.DocumentText>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p7:KeywordBasedClassifierTrainer.DocumentText>
                  <p7:KeywordBasedClassifierTrainer.HumanValidatedData>
                    <InArgument x:TypeArguments="p5:ExtractionResult[]">
                      <DelegateArgumentValue x:TypeArguments="p5:ExtractionResult[]">
                        <DelegateInArgument x:TypeArguments="p5:ExtractionResult[]" Name="HumanValidatedData" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </p7:KeywordBasedClassifierTrainer.HumanValidatedData>
                </p7:KeywordBasedClassifierTrainer>
              </p7:TrainClassifiersScope.Trainables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p7:TrainClassifiersScope>
            <p4:ExportExtractionResults DataSet="[tableExtracted]" DisplayName="Export Extraction Results" ExtractionResult="[validatedResults]" sap:VirtualizedContainerService.HintSize="200,67" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p4:ExportExtractionResults>
            <ui:ForEach x:TypeArguments="sd1:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[tableExtracted.Tables]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="sd1:DataTable">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd1:DataTable" Name="table" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,213" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd1:DataTable" Name="item1" />
                      <Variable x:TypeArguments="x:String" Name="tempDT" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:OutputDataTable DataTable="[table]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[tempDT]" />
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[tempDT]" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>